// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: urls.proto

#include "urls.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace encurtador {
PROTOBUF_CONSTEXPR RequisicaoEncurtar::RequisicaoEncurtar(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.url_longa_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RequisicaoEncurtarDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RequisicaoEncurtarDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RequisicaoEncurtarDefaultTypeInternal() {}
  union {
    RequisicaoEncurtar _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RequisicaoEncurtarDefaultTypeInternal _RequisicaoEncurtar_default_instance_;
PROTOBUF_CONSTEXPR RespostaEncurtar::RespostaEncurtar(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.url_curta_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.codigo_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.msg_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.sucesso_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RespostaEncurtarDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RespostaEncurtarDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RespostaEncurtarDefaultTypeInternal() {}
  union {
    RespostaEncurtar _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RespostaEncurtarDefaultTypeInternal _RespostaEncurtar_default_instance_;
PROTOBUF_CONSTEXPR RequisicaoObter::RequisicaoObter(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.codigo_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RequisicaoObterDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RequisicaoObterDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RequisicaoObterDefaultTypeInternal() {}
  union {
    RequisicaoObter _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RequisicaoObterDefaultTypeInternal _RequisicaoObter_default_instance_;
PROTOBUF_CONSTEXPR RespostaObter::RespostaObter(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.url_longa_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.msg_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.sucesso_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RespostaObterDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RespostaObterDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RespostaObterDefaultTypeInternal() {}
  union {
    RespostaObter _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RespostaObterDefaultTypeInternal _RespostaObter_default_instance_;
}  // namespace encurtador
static ::_pb::Metadata file_level_metadata_urls_2eproto[4];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_urls_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_urls_2eproto = nullptr;

const uint32_t TableStruct_urls_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::encurtador::RequisicaoEncurtar, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::encurtador::RequisicaoEncurtar, _impl_.url_longa_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::encurtador::RespostaEncurtar, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::encurtador::RespostaEncurtar, _impl_.url_curta_),
  PROTOBUF_FIELD_OFFSET(::encurtador::RespostaEncurtar, _impl_.codigo_),
  PROTOBUF_FIELD_OFFSET(::encurtador::RespostaEncurtar, _impl_.sucesso_),
  PROTOBUF_FIELD_OFFSET(::encurtador::RespostaEncurtar, _impl_.msg_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::encurtador::RequisicaoObter, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::encurtador::RequisicaoObter, _impl_.codigo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::encurtador::RespostaObter, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::encurtador::RespostaObter, _impl_.url_longa_),
  PROTOBUF_FIELD_OFFSET(::encurtador::RespostaObter, _impl_.sucesso_),
  PROTOBUF_FIELD_OFFSET(::encurtador::RespostaObter, _impl_.msg_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::encurtador::RequisicaoEncurtar)},
  { 7, -1, -1, sizeof(::encurtador::RespostaEncurtar)},
  { 17, -1, -1, sizeof(::encurtador::RequisicaoObter)},
  { 24, -1, -1, sizeof(::encurtador::RespostaObter)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::encurtador::_RequisicaoEncurtar_default_instance_._instance,
  &::encurtador::_RespostaEncurtar_default_instance_._instance,
  &::encurtador::_RequisicaoObter_default_instance_._instance,
  &::encurtador::_RespostaObter_default_instance_._instance,
};

const char descriptor_table_protodef_urls_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\nurls.proto\022\nencurtador\"\'\n\022RequisicaoEn"
  "curtar\022\021\n\turl_longa\030\001 \001(\t\"S\n\020RespostaEnc"
  "urtar\022\021\n\turl_curta\030\001 \001(\t\022\016\n\006codigo\030\002 \001(\t"
  "\022\017\n\007sucesso\030\003 \001(\010\022\013\n\003msg\030\004 \001(\t\"!\n\017Requis"
  "icaoObter\022\016\n\006codigo\030\001 \001(\t\"@\n\rRespostaObt"
  "er\022\021\n\turl_longa\030\001 \001(\t\022\017\n\007sucesso\030\002 \001(\010\022\013"
  "\n\003msg\030\003 \001(\t2\245\001\n\rEncurtadorURL\022K\n\013Encurta"
  "rURL\022\036.encurtador.RequisicaoEncurtar\032\034.e"
  "ncurtador.RespostaEncurtar\022G\n\rObterURLLo"
  "nga\022\033.encurtador.RequisicaoObter\032\031.encur"
  "tador.RespostaObterb\006proto3"
  ;
static ::_pbi::once_flag descriptor_table_urls_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_urls_2eproto = {
    false, false, 427, descriptor_table_protodef_urls_2eproto,
    "urls.proto",
    &descriptor_table_urls_2eproto_once, nullptr, 0, 4,
    schemas, file_default_instances, TableStruct_urls_2eproto::offsets,
    file_level_metadata_urls_2eproto, file_level_enum_descriptors_urls_2eproto,
    file_level_service_descriptors_urls_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_urls_2eproto_getter() {
  return &descriptor_table_urls_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_urls_2eproto(&descriptor_table_urls_2eproto);
namespace encurtador {

// ===================================================================

class RequisicaoEncurtar::_Internal {
 public:
};

RequisicaoEncurtar::RequisicaoEncurtar(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:encurtador.RequisicaoEncurtar)
}
RequisicaoEncurtar::RequisicaoEncurtar(const RequisicaoEncurtar& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RequisicaoEncurtar* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.url_longa_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.url_longa_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.url_longa_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_url_longa().empty()) {
    _this->_impl_.url_longa_.Set(from._internal_url_longa(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:encurtador.RequisicaoEncurtar)
}

inline void RequisicaoEncurtar::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.url_longa_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.url_longa_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.url_longa_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

RequisicaoEncurtar::~RequisicaoEncurtar() {
  // @@protoc_insertion_point(destructor:encurtador.RequisicaoEncurtar)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RequisicaoEncurtar::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.url_longa_.Destroy();
}

void RequisicaoEncurtar::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RequisicaoEncurtar::Clear() {
// @@protoc_insertion_point(message_clear_start:encurtador.RequisicaoEncurtar)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.url_longa_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RequisicaoEncurtar::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string url_longa = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_url_longa();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "encurtador.RequisicaoEncurtar.url_longa"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RequisicaoEncurtar::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:encurtador.RequisicaoEncurtar)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string url_longa = 1;
  if (!this->_internal_url_longa().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_url_longa().data(), static_cast<int>(this->_internal_url_longa().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "encurtador.RequisicaoEncurtar.url_longa");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_url_longa(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:encurtador.RequisicaoEncurtar)
  return target;
}

size_t RequisicaoEncurtar::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:encurtador.RequisicaoEncurtar)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string url_longa = 1;
  if (!this->_internal_url_longa().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_url_longa());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RequisicaoEncurtar::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RequisicaoEncurtar::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RequisicaoEncurtar::GetClassData() const { return &_class_data_; }


void RequisicaoEncurtar::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RequisicaoEncurtar*>(&to_msg);
  auto& from = static_cast<const RequisicaoEncurtar&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:encurtador.RequisicaoEncurtar)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_url_longa().empty()) {
    _this->_internal_set_url_longa(from._internal_url_longa());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RequisicaoEncurtar::CopyFrom(const RequisicaoEncurtar& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:encurtador.RequisicaoEncurtar)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RequisicaoEncurtar::IsInitialized() const {
  return true;
}

void RequisicaoEncurtar::InternalSwap(RequisicaoEncurtar* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.url_longa_, lhs_arena,
      &other->_impl_.url_longa_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata RequisicaoEncurtar::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_urls_2eproto_getter, &descriptor_table_urls_2eproto_once,
      file_level_metadata_urls_2eproto[0]);
}

// ===================================================================

class RespostaEncurtar::_Internal {
 public:
};

RespostaEncurtar::RespostaEncurtar(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:encurtador.RespostaEncurtar)
}
RespostaEncurtar::RespostaEncurtar(const RespostaEncurtar& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RespostaEncurtar* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.url_curta_){}
    , decltype(_impl_.codigo_){}
    , decltype(_impl_.msg_){}
    , decltype(_impl_.sucesso_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.url_curta_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.url_curta_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_url_curta().empty()) {
    _this->_impl_.url_curta_.Set(from._internal_url_curta(), 
      _this->GetArenaForAllocation());
  }
  _impl_.codigo_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.codigo_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_codigo().empty()) {
    _this->_impl_.codigo_.Set(from._internal_codigo(), 
      _this->GetArenaForAllocation());
  }
  _impl_.msg_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.msg_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_msg().empty()) {
    _this->_impl_.msg_.Set(from._internal_msg(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.sucesso_ = from._impl_.sucesso_;
  // @@protoc_insertion_point(copy_constructor:encurtador.RespostaEncurtar)
}

inline void RespostaEncurtar::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.url_curta_){}
    , decltype(_impl_.codigo_){}
    , decltype(_impl_.msg_){}
    , decltype(_impl_.sucesso_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.url_curta_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.url_curta_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.codigo_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.codigo_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.msg_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.msg_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

RespostaEncurtar::~RespostaEncurtar() {
  // @@protoc_insertion_point(destructor:encurtador.RespostaEncurtar)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RespostaEncurtar::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.url_curta_.Destroy();
  _impl_.codigo_.Destroy();
  _impl_.msg_.Destroy();
}

void RespostaEncurtar::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RespostaEncurtar::Clear() {
// @@protoc_insertion_point(message_clear_start:encurtador.RespostaEncurtar)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.url_curta_.ClearToEmpty();
  _impl_.codigo_.ClearToEmpty();
  _impl_.msg_.ClearToEmpty();
  _impl_.sucesso_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RespostaEncurtar::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string url_curta = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_url_curta();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "encurtador.RespostaEncurtar.url_curta"));
        } else
          goto handle_unusual;
        continue;
      // string codigo = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_codigo();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "encurtador.RespostaEncurtar.codigo"));
        } else
          goto handle_unusual;
        continue;
      // bool sucesso = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.sucesso_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string msg = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_msg();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "encurtador.RespostaEncurtar.msg"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RespostaEncurtar::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:encurtador.RespostaEncurtar)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string url_curta = 1;
  if (!this->_internal_url_curta().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_url_curta().data(), static_cast<int>(this->_internal_url_curta().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "encurtador.RespostaEncurtar.url_curta");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_url_curta(), target);
  }

  // string codigo = 2;
  if (!this->_internal_codigo().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_codigo().data(), static_cast<int>(this->_internal_codigo().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "encurtador.RespostaEncurtar.codigo");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_codigo(), target);
  }

  // bool sucesso = 3;
  if (this->_internal_sucesso() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(3, this->_internal_sucesso(), target);
  }

  // string msg = 4;
  if (!this->_internal_msg().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg().data(), static_cast<int>(this->_internal_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "encurtador.RespostaEncurtar.msg");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_msg(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:encurtador.RespostaEncurtar)
  return target;
}

size_t RespostaEncurtar::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:encurtador.RespostaEncurtar)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string url_curta = 1;
  if (!this->_internal_url_curta().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_url_curta());
  }

  // string codigo = 2;
  if (!this->_internal_codigo().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_codigo());
  }

  // string msg = 4;
  if (!this->_internal_msg().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg());
  }

  // bool sucesso = 3;
  if (this->_internal_sucesso() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RespostaEncurtar::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RespostaEncurtar::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RespostaEncurtar::GetClassData() const { return &_class_data_; }


void RespostaEncurtar::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RespostaEncurtar*>(&to_msg);
  auto& from = static_cast<const RespostaEncurtar&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:encurtador.RespostaEncurtar)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_url_curta().empty()) {
    _this->_internal_set_url_curta(from._internal_url_curta());
  }
  if (!from._internal_codigo().empty()) {
    _this->_internal_set_codigo(from._internal_codigo());
  }
  if (!from._internal_msg().empty()) {
    _this->_internal_set_msg(from._internal_msg());
  }
  if (from._internal_sucesso() != 0) {
    _this->_internal_set_sucesso(from._internal_sucesso());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RespostaEncurtar::CopyFrom(const RespostaEncurtar& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:encurtador.RespostaEncurtar)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RespostaEncurtar::IsInitialized() const {
  return true;
}

void RespostaEncurtar::InternalSwap(RespostaEncurtar* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.url_curta_, lhs_arena,
      &other->_impl_.url_curta_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.codigo_, lhs_arena,
      &other->_impl_.codigo_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.msg_, lhs_arena,
      &other->_impl_.msg_, rhs_arena
  );
  swap(_impl_.sucesso_, other->_impl_.sucesso_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RespostaEncurtar::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_urls_2eproto_getter, &descriptor_table_urls_2eproto_once,
      file_level_metadata_urls_2eproto[1]);
}

// ===================================================================

class RequisicaoObter::_Internal {
 public:
};

RequisicaoObter::RequisicaoObter(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:encurtador.RequisicaoObter)
}
RequisicaoObter::RequisicaoObter(const RequisicaoObter& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RequisicaoObter* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.codigo_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.codigo_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.codigo_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_codigo().empty()) {
    _this->_impl_.codigo_.Set(from._internal_codigo(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:encurtador.RequisicaoObter)
}

inline void RequisicaoObter::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.codigo_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.codigo_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.codigo_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

RequisicaoObter::~RequisicaoObter() {
  // @@protoc_insertion_point(destructor:encurtador.RequisicaoObter)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RequisicaoObter::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.codigo_.Destroy();
}

void RequisicaoObter::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RequisicaoObter::Clear() {
// @@protoc_insertion_point(message_clear_start:encurtador.RequisicaoObter)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.codigo_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RequisicaoObter::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string codigo = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_codigo();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "encurtador.RequisicaoObter.codigo"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RequisicaoObter::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:encurtador.RequisicaoObter)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string codigo = 1;
  if (!this->_internal_codigo().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_codigo().data(), static_cast<int>(this->_internal_codigo().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "encurtador.RequisicaoObter.codigo");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_codigo(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:encurtador.RequisicaoObter)
  return target;
}

size_t RequisicaoObter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:encurtador.RequisicaoObter)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string codigo = 1;
  if (!this->_internal_codigo().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_codigo());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RequisicaoObter::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RequisicaoObter::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RequisicaoObter::GetClassData() const { return &_class_data_; }


void RequisicaoObter::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RequisicaoObter*>(&to_msg);
  auto& from = static_cast<const RequisicaoObter&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:encurtador.RequisicaoObter)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_codigo().empty()) {
    _this->_internal_set_codigo(from._internal_codigo());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RequisicaoObter::CopyFrom(const RequisicaoObter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:encurtador.RequisicaoObter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RequisicaoObter::IsInitialized() const {
  return true;
}

void RequisicaoObter::InternalSwap(RequisicaoObter* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.codigo_, lhs_arena,
      &other->_impl_.codigo_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata RequisicaoObter::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_urls_2eproto_getter, &descriptor_table_urls_2eproto_once,
      file_level_metadata_urls_2eproto[2]);
}

// ===================================================================

class RespostaObter::_Internal {
 public:
};

RespostaObter::RespostaObter(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:encurtador.RespostaObter)
}
RespostaObter::RespostaObter(const RespostaObter& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RespostaObter* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.url_longa_){}
    , decltype(_impl_.msg_){}
    , decltype(_impl_.sucesso_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.url_longa_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.url_longa_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_url_longa().empty()) {
    _this->_impl_.url_longa_.Set(from._internal_url_longa(), 
      _this->GetArenaForAllocation());
  }
  _impl_.msg_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.msg_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_msg().empty()) {
    _this->_impl_.msg_.Set(from._internal_msg(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.sucesso_ = from._impl_.sucesso_;
  // @@protoc_insertion_point(copy_constructor:encurtador.RespostaObter)
}

inline void RespostaObter::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.url_longa_){}
    , decltype(_impl_.msg_){}
    , decltype(_impl_.sucesso_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.url_longa_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.url_longa_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.msg_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.msg_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

RespostaObter::~RespostaObter() {
  // @@protoc_insertion_point(destructor:encurtador.RespostaObter)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RespostaObter::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.url_longa_.Destroy();
  _impl_.msg_.Destroy();
}

void RespostaObter::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RespostaObter::Clear() {
// @@protoc_insertion_point(message_clear_start:encurtador.RespostaObter)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.url_longa_.ClearToEmpty();
  _impl_.msg_.ClearToEmpty();
  _impl_.sucesso_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RespostaObter::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string url_longa = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_url_longa();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "encurtador.RespostaObter.url_longa"));
        } else
          goto handle_unusual;
        continue;
      // bool sucesso = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.sucesso_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string msg = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_msg();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "encurtador.RespostaObter.msg"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RespostaObter::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:encurtador.RespostaObter)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string url_longa = 1;
  if (!this->_internal_url_longa().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_url_longa().data(), static_cast<int>(this->_internal_url_longa().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "encurtador.RespostaObter.url_longa");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_url_longa(), target);
  }

  // bool sucesso = 2;
  if (this->_internal_sucesso() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_sucesso(), target);
  }

  // string msg = 3;
  if (!this->_internal_msg().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg().data(), static_cast<int>(this->_internal_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "encurtador.RespostaObter.msg");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_msg(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:encurtador.RespostaObter)
  return target;
}

size_t RespostaObter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:encurtador.RespostaObter)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string url_longa = 1;
  if (!this->_internal_url_longa().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_url_longa());
  }

  // string msg = 3;
  if (!this->_internal_msg().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg());
  }

  // bool sucesso = 2;
  if (this->_internal_sucesso() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RespostaObter::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RespostaObter::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RespostaObter::GetClassData() const { return &_class_data_; }


void RespostaObter::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RespostaObter*>(&to_msg);
  auto& from = static_cast<const RespostaObter&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:encurtador.RespostaObter)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_url_longa().empty()) {
    _this->_internal_set_url_longa(from._internal_url_longa());
  }
  if (!from._internal_msg().empty()) {
    _this->_internal_set_msg(from._internal_msg());
  }
  if (from._internal_sucesso() != 0) {
    _this->_internal_set_sucesso(from._internal_sucesso());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RespostaObter::CopyFrom(const RespostaObter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:encurtador.RespostaObter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RespostaObter::IsInitialized() const {
  return true;
}

void RespostaObter::InternalSwap(RespostaObter* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.url_longa_, lhs_arena,
      &other->_impl_.url_longa_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.msg_, lhs_arena,
      &other->_impl_.msg_, rhs_arena
  );
  swap(_impl_.sucesso_, other->_impl_.sucesso_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RespostaObter::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_urls_2eproto_getter, &descriptor_table_urls_2eproto_once,
      file_level_metadata_urls_2eproto[3]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace encurtador
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::encurtador::RequisicaoEncurtar*
Arena::CreateMaybeMessage< ::encurtador::RequisicaoEncurtar >(Arena* arena) {
  return Arena::CreateMessageInternal< ::encurtador::RequisicaoEncurtar >(arena);
}
template<> PROTOBUF_NOINLINE ::encurtador::RespostaEncurtar*
Arena::CreateMaybeMessage< ::encurtador::RespostaEncurtar >(Arena* arena) {
  return Arena::CreateMessageInternal< ::encurtador::RespostaEncurtar >(arena);
}
template<> PROTOBUF_NOINLINE ::encurtador::RequisicaoObter*
Arena::CreateMaybeMessage< ::encurtador::RequisicaoObter >(Arena* arena) {
  return Arena::CreateMessageInternal< ::encurtador::RequisicaoObter >(arena);
}
template<> PROTOBUF_NOINLINE ::encurtador::RespostaObter*
Arena::CreateMaybeMessage< ::encurtador::RespostaObter >(Arena* arena) {
  return Arena::CreateMessageInternal< ::encurtador::RespostaObter >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
